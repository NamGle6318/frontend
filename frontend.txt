h웹(앱) 개발 : 프론트(html, css, JS, reactm vue, ...) / 백엔드(node.js, java, python, 닷넷, ...)
    -- 기반 : 서버, 네트워크 등

    -- 브라우저 기반
    -- 브라우저를 통해서 실행될 수 있는 언어
    -- 1. HTML(Hyper Text Markup Language)
        -- 웹 브라우저에서 표시되도록 설계된 표준 마크업 언어
        -- 태그
        -- 화면 구조 설계

    -- 2. CSS(Cascading Style Sheets) : 디자인
      -- css 파일 위치
        -- head 태그 안 : 길지 않다면
            -- <style> h2 {color: gray;} </style>
        -- inline 처리(직접 처리) : 비추천
        -- 외부 파일(추천) : 
            -- <head> <link rel="stylesheet" href="mycss.css" /> </head>

      -- 디자인을 반영할 요소 선택
        -- 태그선택자 : 태그
        -- id ... : #
        -- 클래스 ... : .
        -- 전체 ... : *
        -- 자식/자손 ... : > / 공백한칸
        -- 형제 ... : 
          -- 인접형제 : +
          -- 모든형제 : ~
        -- 그룹  ... : 선택자1, 선택자2
        -- 속성 ... : 
          - [속성명]
          - [속성명 = 값] : 값과 일치하는
          - [속성명 ~= 값] : 값이 정확하게 포함된
          - [속성명 ^= 값] : 값으로 시작하는
          - [속성명 $= 값] : 값으로 끝나는
          - [속성명 *= 값] : 값이 포함된 
        -- 가상(Pseduo) 클래스 선택자
          -- a tag
            - .state
              : link
              : active
              : visited
            - .다른요소
              : hover => 특정 요소에 마우스가 올라간 상황
              : focus => 특정 요소에 초점이 맞춰진 상황
          - ui 변화
            : disabled 
            : checked => radio, checkbox
          
        -- 가상 요소 선택자
          :: before
          :: after

        -- 구조 선택자
          : first-child
          : last-child
          : nth-child(3)
            : nth-child(n) (n) => 0부터 시작

        -- 형태구조 선택자 : 태그명 사용
          : first-of-type
          : last-of-type
          : nth-last-of-type(n)
          : nth-of-type()
        
        -- 부정 선택자
          : E:not(S) => S가 아닌 E 선택
          
        -- 디자인을 반영할 요소 선택
          - color
            a. 색상명 : red, blue, ...
            b. 16진수 : #13ffee, #12ffae, ...
            c. RGB : rgb(255,255,255), rgb(0,0,0), rgb(1,2,3), ...
                    + rgba(0,255,0,0.5) (투명도)

        -- 단위 
          1. px : 고정(브라우저 크기를 줄이면 줄인 방향으로 스크롤 생김)
          2. % : 상대(부모가 만들어준 공간에서의 비율)
          3. em : em 단위가 쓰여진 곳의 폰트 사이즈 배수
          4. rem : 루트 요소의 크기를 기준으로 함
          5. vw : view_port_with : 화면 기준
          6. vh : view_port_height
        
        -- 상속 : 글자와 관련된 속성들이 주로 상속을 가짐
        -- 우선순위 : 
          (important > 인라인선언 > 아이디(100) > 클래스(10) > 태그 > 전체선택자 > 상속)
          1. 명시도 점수가 높은 선언이 우선
          2. 점수가 같은 경우 가장 마지막에 해석되는 선언이 우선
          3. 명시도는 상속 규칙보다 우선
          4. important 가 적용된 선언 방식이 최우선

외부 라이브러리(프레임워크) 사용하는 방법
  1. 다운로드
  2. CDN(Content Delivery Network) : 컨텐츠 전송 네트워크

    --3. JavaScript(JS) 
      -- 동적인 작업 담당(버튼 누르면 메시지 송출)
      -- HTML 안에 작성 가능 : 웹 페이지를 불러올 때 스크립트가 자동 실행됨
      -- 서버에서도 실행 가능 -> NodeJS
      -- 자바스크립트 실행환경
        1. Browser
        2. Node.js

      - 스크립트의 선언 위치
        1. html head 안에
        2. html body 끝부분
        3. script src 로 파일 위치 불러오기
          -- 동일하게 head, body에 불러오는 코드 작성